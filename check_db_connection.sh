#!/bin/bash

# üîç –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PK Online Bot

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose
check_docker_compose() {
    if ! command -v docker-compose &> /dev/null; then
        print_error "docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_containers() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    if ! docker-compose ps | grep -q "Up"; then
        print_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d"
        exit 1
    fi
    
    print_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
check_db_connection() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    
    if docker-compose exec db pg_isready -U pkonline; then
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        print_error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env_vars() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if [ ! -f ".env" ]; then
        print_warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ë–î
    source .env
    
    if [ -z "$POSTGRES_DB" ]; then
        print_warning "POSTGRES_DB –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "POSTGRES_DB: $POSTGRES_DB"
    fi
    
    if [ -z "$POSTGRES_USER" ]; then
        print_warning "POSTGRES_USER –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "POSTGRES_USER: $POSTGRES_USER"
    fi
    
    if [ -z "$POSTGRES_PASSWORD" ]; then
        print_warning "POSTGRES_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_success "POSTGRES_PASSWORD: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
check_port() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 5432..."
    
    if netstat -tulpn 2>/dev/null | grep -q ":5432 "; then
        print_success "–ü–æ—Ä—Ç 5432 –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        print_warning "–ü–æ—Ä—Ç 5432 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ netstat"
        print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: docker-compose logs db"
    fi
}

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î
test_query() {
    print_info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞..."
    
    result=$(docker-compose exec -T db psql -U pkonline -d pkonline -t -c "SELECT version();" 2>/dev/null | tr -d ' ')
    
    if [ ! -z "$result" ]; then
        print_success "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        print_info "PostgreSQL –≤–µ—Ä—Å–∏—è: $result"
    else
        print_error "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"
        return 1
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
show_connection_info() {
    print_info "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    echo
    echo "üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    echo "   –•–æ—Å—Ç: localhost"
    echo "   –ü–æ—Ä—Ç: 5432"
    echo "   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: pkonline"
    echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: pkonline"
    echo "   –ü–∞—Ä–æ–ª—å: pkonline"
    echo "   SSL: –û—Ç–∫–ª—é—á–µ–Ω"
    echo
    echo "üîó –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    echo "   postgresql://pkonline:pkonline@localhost:5432/pkonline"
    echo
    echo "üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: DATABASE_ACCESS.md"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
check_tables() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    tables=$(docker-compose exec -T db psql -U pkonline -d pkonline -t -c "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';" 2>/dev/null)
    
    if [ ! -z "$tables" ]; then
        print_success "–¢–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã:"
        echo "$tables" | sed 's/^/  - /'
    else
        print_warning "–¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        print_info "–í–æ–∑–º–æ–∂–Ω–æ, –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PK Online Bot"
    echo "=================================================="
    echo
    
    check_docker_compose
    check_containers
    check_env_vars
    check_port
    check_db_connection
    test_query
    check_tables
    
    echo
    echo "=================================================="
    print_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    echo
    
    show_connection_info
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 
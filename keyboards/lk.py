from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def lk_queue_keyboard(menu=False):
    buttons = [
        [InlineKeyboardButton(text="–°–ª–µ–¥—É—é—â–µ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ", callback_data="lk_next")],
        [InlineKeyboardButton(text="–ü–æ–∏—Å–∫ –ø–æ –§–ò–û", callback_data="lk_search_fio")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]
    if menu:
        buttons = [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def lk_decision_keyboard(menu: bool = True) -> InlineKeyboardMarkup:
    if menu:
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìã –ü–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ", callback_data="lk_next")],
            [InlineKeyboardButton(text="–ü–æ–∏—Å–∫ –ø–æ –§–ò–û", callback_data="lk_search_fio")],
            [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ])
    else:
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data="accept_lk")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="reject_lk")],
            [InlineKeyboardButton(text="‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞", callback_data="problem_lk")],
            [InlineKeyboardButton(text="üîÑ –í–µ—Ä–Ω—É—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å", callback_data="return_lk")]
        ])

def lk_reason_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="lk_cancel_reason")]
    ])

def lk_escalate_keyboard(app_id: int, is_priority: bool, status: str = "queued"):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π –õ–ö"""
    buttons = []
    
    # –ö–Ω–æ–ø–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –∏–ª–∏ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ)
    if status in ["queued", "in_progress"]:
        if status == "queued":
            button_text = "üîÑ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ"
        else:
            button_text = "üîÑ –í–∑—è—Ç—å –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É"
        buttons.append([InlineKeyboardButton(text=button_text, callback_data=f"lk_process_found_{app_id}")])
    
    # –ö–Ω–æ–ø–∫–∞ —ç—Å–∫–∞–ª–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ –∏ –≤ –æ—á–µ—Ä–µ–¥–∏)
    if not is_priority and status == "queued":
        buttons.append([InlineKeyboardButton(text="üö® –≠—Å–∫–∞–ª–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"lk_escalate_{app_id}")])
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    buttons.append([
        InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –µ—â–µ", callback_data="lk_search_fio"),
        InlineKeyboardButton(text="üìã –°–ª–µ–¥—É—é—â–µ–µ", callback_data="lk_next")
    ])
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="lk_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons) 
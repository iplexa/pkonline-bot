from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def problem_menu_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–õ–ö", callback_data="problem_queue_lk")],
        [InlineKeyboardButton(text="–ï–ü–ì–£", callback_data="problem_queue_epgu")],
        [InlineKeyboardButton(text="–ü–æ—á—Ç–∞", callback_data="problem_queue_epgu_mail")],
        [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def problem_list_keyboard(problems):
    buttons = []
    for app in problems:
        text = f"{app.fio} | {app.submitted_at.strftime('%d.%m.%Y %H:%M')} | {app.problem_status.value if app.problem_status else '–Ω–æ–≤–æ–µ'}"
        if app.problem_comment:
            text += f" | {app.problem_comment[:20]}..."
        buttons.append([InlineKeyboardButton(text=text, callback_data=f"problem_app_{app.id}")])
    buttons.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="problem_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def problem_action_keyboard(app_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –†–µ—à–µ–Ω–æ (–ø—Ä–∏–Ω—è—Ç—å)", callback_data=f"problem_action_solved")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –†–µ—à–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É", callback_data=f"problem_action_solved_return")],
        [InlineKeyboardButton(text="üõ†Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ—à–µ–Ω–∏—è", callback_data=f"problem_action_in_progress")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"problem_action_cancel")],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="problem_menu")]
    ])

def problem_status_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="problem_menu")]
    ]) 
#!/bin/bash

# üê≥ –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ PK Online Bot
# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –ë–î –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Docker Compose

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose
check_docker_compose() {
    if ! command -v docker-compose &> /dev/null; then
        print_error "docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ë–î
create_backup() {
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    if [ ! -d "backups" ]; then
        mkdir -p backups
    fi
    
    timestamp=$(date +%Y%m%d_%H%M%S)
    backup_file="backups/backup_${timestamp}.sql"
    
    docker-compose exec -T db pg_dump -U pkonline pkonline > "$backup_file"
    
    if [ $? -eq 0 ]; then
        print_success "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $backup_file"
        print_info "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(du -h "$backup_file" | cut -f1)"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞"
        exit 1
    fi
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
restore_backup() {
    if [ -z "$1" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 restore <backup_file>"
        exit 1
    fi
    
    backup_file="$1"
    
    if [ ! -f "$backup_file" ]; then
        print_error "–§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $backup_file"
        exit 1
    fi
    
    print_warning "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞: $backup_file"
    print_warning "–≠—Ç–æ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ!"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        print_info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
        docker-compose down
        
        print_info "–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –ë–î..."
        docker-compose up -d db
        
        print_info "–ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î..."
        sleep 10
        
        print_info "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."
        docker-compose exec -T db psql -U pkonline pkonline < "$backup_file"
        
        if [ $? -eq 0 ]; then
            print_success "–î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
            print_info "–ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã..."
            docker-compose up -d
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö"
            exit 1
        fi
    else
        print_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞
safe_rebuild() {
    print_info "–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    print_info "1. –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø..."
    create_backup
    
    print_info "2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose down
    
    print_info "3. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã..."
    docker-compose build --no-cache
    
    print_info "4. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
    docker-compose up -d
    
    print_info "5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
    sleep 5
    docker-compose ps
    
    print_success "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    print_info "–î–∞–Ω–Ω—ã–µ –ë–î —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ volume pgdata"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ volumes
show_volumes() {
    print_info "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ volumes:"
    echo
    
    print_info "–°–ø–∏—Å–æ–∫ volumes:"
    docker volume ls | grep pkonline-bot || echo "Volumes –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo
    
    print_info "–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ pgdata:"
    docker volume inspect pkonline-bot_pgdata 2>/dev/null || print_warning "Volume pgdata –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo
    
    print_info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
    docker system df -v | grep -E "(pkonline-bot|pgdata)" || echo "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_backups() {
    print_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
    
    if [ ! -d "backups" ]; then
        print_warning "–ü–∞–ø–∫–∞ backups –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return
    fi
    
    # –£–¥–∞–ª—è–µ–º –±—ç–∫–∞–ø—ã —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    find backups -name "backup_*.sql" -mtime +30 -delete
    
    print_success "–°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã —É–¥–∞–ª–µ–Ω—ã"
    print_info "–û—Å—Ç–∞–≤—à–∏–µ—Å—è –±—ç–∫–∞–ø—ã:"
    ls -la backups/ 2>/dev/null || echo "–ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –ë–î
check_database() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if docker-compose exec db pg_isready -U pkonline; then
        print_success "–ë–î –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        print_error "–ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
    size=$(docker-compose exec -T db psql -U pkonline -t -c "SELECT pg_size_pretty(pg_database_size('pkonline'));" 2>/dev/null | tr -d ' ')
    if [ ! -z "$size" ]; then
        print_info "–†–∞–∑–º–µ—Ä –ë–î: $size"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π
    tables=$(docker-compose exec -T db psql -U pkonline -t -c "SELECT schemaname, tablename FROM pg_tables WHERE schemaname = 'public';" 2>/dev/null)
    if [ ! -z "$tables" ]; then
        print_info "–¢–∞–±–ª–∏—Ü—ã –≤ –ë–î:"
        echo "$tables" | sed 's/^/  - /'
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    echo "üê≥ –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ PK Online Bot"
    echo
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–æ–º–∞–Ω–¥–∞> [–æ–ø—Ü–∏–∏]"
    echo
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  backup              - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ë–î"
    echo "  restore <file>      - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞"
    echo "  rebuild             - –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ (—Å –±—ç–∫–∞–ø–æ–º)"
    echo "  volumes             - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ volumes"
    echo "  cleanup             - –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã"
    echo "  check               - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –ë–î"
    echo "  help                - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 backup"
    echo "  $0 restore backups/backup_20241201_120000.sql"
    echo "  $0 rebuild"
    echo
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –î–∞–Ω–Ω—ã–µ –ë–î —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–º volume pgdata"
    echo "   –∏ –ù–ï —É–¥–∞–ª—è—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    check_docker_compose
    
    case "${1:-help}" in
        backup)
            create_backup
            ;;
        restore)
            restore_backup "$2"
            ;;
        rebuild)
            safe_rebuild
            ;;
        volumes)
            show_volumes
            ;;
        cleanup)
            cleanup_backups
            ;;
        check)
            check_database
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            echo
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 
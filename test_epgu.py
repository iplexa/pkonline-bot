#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ï–ü–ì–£
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from db.crud import (
    add_employee, 
    add_group_to_employee, 
    add_application, 
    get_employee_by_tg_id,
    get_applications_by_queue_type,
    get_all_work_days_report
)
from db.models import ApplicationStatusEnum
from datetime import datetime

async def test_epgu():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –ï–ü–ì–£"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ï–ü–ì–£...")
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    test_tg_id = "123456789"
    test_fio = "–¢–µ—Å—Ç–æ–≤—ã–π –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –ï–ü–ì–£"
    
    print(f"1. –°–æ–∑–¥–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {test_fio}")
    emp = await add_employee(test_tg_id, test_fio)
    print(f"   ‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω: ID={emp.id}")
    
    # 2. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –≥—Ä—É–ø–ø—É –ï–ü–ì–£
    print("2. –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É –ï–ü–ì–£")
    result = await add_group_to_employee(test_tg_id, "epgu")
    print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    # 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å –ï–ü–ì–£
    print("3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è")
    test_applications = [
        {"fio": "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", "submitted_at": datetime.now()},
        {"fio": "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", "submitted_at": datetime.now()},
        {"fio": "–°–∏–¥–æ—Ä–æ–≤ –°.–°.", "submitted_at": datetime.now()},
    ]
    
    for app_data in test_applications:
        app = await add_application(
            fio=app_data["fio"],
            submitted_at=app_data["submitted_at"],
            queue_type="epgu"
        )
        print(f"   ‚úÖ –ó–∞—è–≤–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {app.fio} (ID={app.id})")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏
    print("4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–µ—Ä–µ–¥—å –ï–ü–ì–£")
    apps = await get_applications_by_queue_type("epgu")
    print(f"   üìã –ó–∞—è–≤–ª–µ–Ω–∏–π –≤ –æ—á–µ—Ä–µ–¥–∏: {len(apps)}")
    for app in apps:
        print(f"      - {app.fio} (—Å—Ç–∞—Ç—É—Å: {app.status.value})")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç—ã
    print("5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç—ã")
    reports = await get_all_work_days_report()
    print(f"   üìä –û—Ç—á–µ—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {len(reports)}")
    for report in reports:
        print(f"      - {report['employee_fio']}: {report['applications_processed']} –∑–∞—è–≤–ª–µ–Ω–∏–π")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_epgu()) 
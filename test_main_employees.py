#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from db.crud import get_employee_by_tg_id, add_employee, add_group_to_employee
from db.session import get_session

async def test_main_employees():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""
    
    print("=== –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ ===")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å –≥—Ä—É–ø–ø–∞–º–∏
    main_employees = [
        {
            "tg_id": "2019439815", 
            "fio": "–ß–µ—Ä–Ω—è–∫–æ–≤–∞ –ö—Å–µ–Ω–∏—è –í–ª–∞–¥–ª–µ–Ω–æ–≤–Ω–∞",
            "groups": ["lk", "epgu", "mail", "problem"]
        },
        {
            "tg_id": "1329555538", 
            "fio": "–ú—É–∫—É–º–æ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è –î–µ–Ω–∏—Å–æ–≤–Ω–∞",
            "groups": ["lk", "epgu", "mail", "problem"]
        },
        {
            "tg_id": "5163143779", 
            "fio": "–ì–æ—Ä—è—á–µ–≤–∞ –î–∏–∞–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
            "groups": ["lk"]
        },
        {
            "tg_id": "1059622323", 
            "fio": "–ö—Ä—é–∫–æ–≤–∞ –ü–æ–ª–∏–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞",
            "groups": ["lk"]
        },
        {
            "tg_id": "945793471", 
            "fio": "–ö–æ–∂–∞–Ω–æ–≤–∞ –ê—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
            "groups": ["lk"]
        },
        {
            "tg_id": "1395039679", 
            "fio": "–ö–∞—Ä—Ç–æ–µ–≤–∞ –†–∞—è–Ω–∞ –Æ–Ω—É—Å–æ–≤–Ω–∞",
            "groups": ["lk"]
        }
    ]
    
    added_count = 0
    already_exists_count = 0
    groups_added_count = 0
    
    print("–ù–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...")
    
    for emp_data in main_employees:
        print(f"\n–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {emp_data['fio']} (ID: {emp_data['tg_id']})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
        existing_emp = await get_employee_by_tg_id(emp_data["tg_id"])
        if existing_emp:
            print(f"  ‚ö†Ô∏è –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            already_exists_count += 1
            # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
            for group in emp_data["groups"]:
                try:
                    await add_group_to_employee(emp_data["tg_id"], group)
                    groups_added_count += 1
                    print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≥—Ä—É–ø–ø–∞: {group}")
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã {group}: {e}")
            continue
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        try:
            await add_employee(emp_data["tg_id"], emp_data["fio"])
            added_count += 1
            print(f"  ‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã –∫ –Ω–æ–≤–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
            for group in emp_data["groups"]:
                try:
                    await add_group_to_employee(emp_data["tg_id"], group)
                    groups_added_count += 1
                    print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≥—Ä—É–ø–ø–∞: {group}")
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã {group}: {e}")
                    
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {e}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    print(f"\n=== –û–¢–ß–ï–¢ ===")
    print(f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {added_count}")
    print(f"‚ö†Ô∏è –£–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: {already_exists_count}")
    print(f"üè∑Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–æ –≥—Ä—É–ø–ø: {groups_added_count}")
    
    if added_count > 0:
        print(f"\n–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:")
        for emp_data in main_employees:
            groups_str = ", ".join(emp_data["groups"])
            print(f"‚Ä¢ {emp_data['fio']} (ID: {emp_data['tg_id']})")
            print(f"  –ì—Ä—É–ø–ø—ã: {groups_str}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_main_employees()) 
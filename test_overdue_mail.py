#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π –ø–æ—á—Ç—ã
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from db.session import get_session
from db.models import Application, ApplicationStatusEnum, EPGUActionEnum
from db.crud import get_overdue_mail_applications, export_overdue_mail_applications_to_excel, get_moscow_now
from sqlalchemy import select

async def test_overdue_mail_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è–º–∏ –ø–æ—á—Ç—ã"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π –ø–æ—á—Ç—ã")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ—á—Ç—ã
    print("1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ—á—Ç—ã")
    
    async for session in get_session():
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è
        await session.execute(
            select(Application).where(Application.fio.like("–¢–µ—Å—Ç%"))
        )
        test_apps = await session.execute(
            select(Application).where(Application.fio.like("–¢–µ—Å—Ç%"))
        )
        for app in test_apps.scalars().all():
            await session.delete(app)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–ª–µ–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
        now = get_moscow_now()
        
        # –ó–∞—è–≤–ª–µ–Ω–∏–µ, –∂–¥—É—â–µ–µ –æ—Ç–≤–µ—Ç–∞ 5 –¥–Ω–µ–π (–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ)
        app1 = Application(
            fio="–¢–µ—Å—Ç –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π –ò.–ò.",
            submitted_at=now - timedelta(days=10),
            queue_type="epgu_mail",
            status=ApplicationStatusEnum.QUEUED,
            postponed_until=now - timedelta(days=5),
            epgu_action=EPGUActionEnum.SIGNATURE,
            needs_signature=True,
            needs_scans=False
        )
        
        # –ó–∞—è–≤–ª–µ–Ω–∏–µ, –∂–¥—É—â–µ–µ –æ—Ç–≤–µ—Ç–∞ 1 –¥–µ–Ω—å (–Ω–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ)
        app2 = Application(
            fio="–¢–µ—Å—Ç –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ò.–ò.",
            submitted_at=now - timedelta(days=5),
            queue_type="epgu_mail",
            status=ApplicationStatusEnum.QUEUED,
            postponed_until=now - timedelta(days=1),
            epgu_action=EPGUActionEnum.SCANS,
            needs_signature=False,
            needs_scans=True
        )
        
        # –ó–∞—è–≤–ª–µ–Ω–∏–µ, –∂–¥—É—â–µ–µ –æ—Ç–≤–µ—Ç–∞ 7 –¥–Ω–µ–π (–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ)
        app3 = Application(
            fio="–¢–µ—Å—Ç –û—á–µ–Ω—å –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π –ò.–ò.",
            submitted_at=now - timedelta(days=15),
            queue_type="epgu_mail",
            status=ApplicationStatusEnum.QUEUED,
            postponed_until=now - timedelta(days=7),
            epgu_action=EPGUActionEnum.SIGNATURE_SCANS,
            needs_signature=True,
            needs_scans=True
        )
        
        session.add_all([app1, app2, app3])
        await session.commit()
        
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ 3 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏—è")
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π
    print("2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–ª–µ–Ω–∏—è, –∂–¥—É—â–∏–µ –æ—Ç–≤–µ—Ç–∞ –±–æ–ª–µ–µ 3 –¥–Ω–µ–π
    overdue_apps = await get_overdue_mail_applications(days_threshold=3)
    print(f"   üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π (–±–æ–ª–µ–µ 3 –¥–Ω–µ–π): {len(overdue_apps)}")
    
    for app in overdue_apps:
        days_waiting = (get_moscow_now() - app.postponed_until).days
        print(f"      - {app.fio}: –∂–¥–µ—Ç {days_waiting} –¥–Ω–µ–π")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–ª–µ–Ω–∏—è, –∂–¥—É—â–∏–µ –æ—Ç–≤–µ—Ç–∞ –±–æ–ª–µ–µ 1 –¥–Ω—è
    overdue_apps_1_day = await get_overdue_mail_applications(days_threshold=1)
    print(f"   üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π (–±–æ–ª–µ–µ 1 –¥–Ω—è): {len(overdue_apps_1_day)}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel
    print("3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel")
    
    filename, message = await export_overdue_mail_applications_to_excel(days_threshold=3)
    
    if filename:
        print(f"   ‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {filename}")
        print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists(filename):
            file_size = os.path.getsize(filename)
            print(f"   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            os.unlink(filename)
            print(f"   üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
        else:
            print(f"   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        print(f"   ‚ÑπÔ∏è {message}")
    
    # 4. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("4. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
    
    async for session in get_session():
        test_apps = await session.execute(
            select(Application).where(Application.fio.like("–¢–µ—Å—Ç%"))
        )
        for app in test_apps.scalars().all():
            await session.delete(app)
        await session.commit()
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(test_apps.scalars().all())} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–ª–µ–Ω–∏–π")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_overdue_mail_functionality()) 
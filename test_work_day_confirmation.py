#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –∏ –∑–∞–ø—Ä–µ—Ç–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞—á–∞–ª–∞
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from db.crud import (
    add_employee, 
    add_group_to_employee, 
    start_work_day,
    end_work_day,
    get_current_work_day,
    get_work_day_report
)
from db.models import WorkDayStatusEnum

async def test_work_day_confirmation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏ –∑–∞–ø—Ä–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞—á–∞–ª–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è")
    print("=" * 60)
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    test_tg_id = "999888777"
    test_fio = "–¢–µ—Å—Ç–æ–≤—ã–π –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ"
    
    print("1. –°–æ–∑–¥–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
    emp = await add_employee(test_tg_id, test_fio)
    print(f"   ‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω: ID={emp.id}")
    
    # 2. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –≥—Ä—É–ø–ø—É –õ–ö
    print("2. –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É –õ–ö")
    result = await add_group_to_employee(test_tg_id, "lk")
    print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    # 3. –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
    print("3. –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å")
    work_day = await start_work_day(emp.id)
    print(f"   ‚úÖ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –Ω–∞—á–∞—Ç: ID={work_day.id}, —Å—Ç–∞—Ç—É—Å={work_day.status.value}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
    print("4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å")
    current_day = await get_current_work_day(emp.id)
    print(f"   ‚úÖ –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å: ID={current_day.id}, —Å—Ç–∞—Ç—É—Å={current_day.status.value}")
    
    # 5. –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —Å–Ω–æ–≤–∞ (–¥–æ–ª–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)
    print("5. –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —Å–Ω–æ–≤–∞")
    work_day_again = await start_work_day(emp.id)
    print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ID={work_day_again.id} (—Ç–æ—Ç –∂–µ –¥–µ–Ω—å)")
    
    # 6. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
    print("6. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å")
    ended_work_day = await end_work_day(emp.id)
    print(f"   ‚úÖ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω: —Å—Ç–∞—Ç—É—Å={ended_work_day.status.value}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω
    print("7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å")
    finished_day = await get_current_work_day(emp.id)
    print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: {finished_day.status.value}, end_time: {finished_day.end_time}")
    
    # 8. –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ)
    print("8. –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ)")
    new_work_day = await start_work_day(emp.id)
    if new_work_day is None:
        print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –Ω–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–ø—Ä–µ—â–µ–Ω (–≤–µ—Ä–Ω—É–ª None)")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: –Ω–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —Å–æ–∑–¥–∞–Ω (ID={new_work_day.id})")
    
    # 9. –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç
    print("9. –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç")
    report = await get_work_day_report(emp.id)
    if report:
        print(f"   ‚úÖ –û—Ç—á–µ—Ç –ø–æ–ª—É—á–µ–Ω: –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã={report['total_work_time']} —Å–µ–∫")
    else:
        print("   ‚ùå –û—Ç—á–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω")
    
    # 10. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("10. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
    async for session in get_session():
        from db.models import Employee
        from sqlalchemy import select
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–∫–∞—Å–∫–∞–¥–Ω–æ —É–¥–∞–ª—è—Ç—Å—è –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏)
        stmt = select(Employee).where(Employee.tg_id == test_tg_id)
        result = await session.execute(stmt)
        test_emp = result.scalars().first()
        
        if test_emp:
            await session.delete(test_emp)
            await session.commit()
            print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–¥–∞–ª–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_work_day_confirmation()) 